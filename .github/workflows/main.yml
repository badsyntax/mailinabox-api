name: Build & Publish
on:
  push:
  release:
    types: [published]

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          npm install
      - name: Validate
        run: |
          npm run validate
  build-and-publish-typescript-fetch:
    needs: [validate]
    name: Build and publish typescript-fetch
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          npm install
      - name: Checkout package source
        uses: actions/checkout@v2
        with:
          repository: badsyntax/mailinabox-api-ts
          path: clients/typescript-fetch
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB }}
      - name: Clean package source
        run: |
          cd clients/typescript-fetch
          git rm -rf .
          git clean -fxd
      - name: Build typescript-fetch client
        run: |
          tag=${GITHUB_REF#refs/tags/}
          # tag=0.0.3
          PACKAGE_VERSION="$tag" npm run generate:typescript-fetch
      - name: Push changes to package source
        run: |
          tag=${GITHUB_REF#refs/tags/}
          # tag=0.0.3
          cd clients/typescript-fetch
          git config user.name "Richard Willis"
          git config user.email "willis.rh@gmail.com"
          git add .
          git commit -m "Generate code for version $tag"
          git push
          git tag "$tag"
          git push --tags
      - name: Publish typescript-fetch package
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd clients/typescript-fetch
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc
          npm publish
  build-and-publish-php:
    needs: [validate]
    name: Build and publish php
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          npm install
      - name: Checkout package source
        uses: actions/checkout@v2
        with:
          repository: badsyntax/mailinabox-api-php
          path: clients/php
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB }}
      - name: Clean package source
        run: |
          cd clients/php
          git rm -rf .
          git clean -fxd
      - name: Build php client
        run: |
          tag=${GITHUB_REF#refs/tags/}
          # tag=0.0.3
          PACKAGE_VERSION="$tag" npm run generate:php
      - name: Push changes to package source
        run: |
          tag=${GITHUB_REF#refs/tags/}
          # tag=0.0.3
          cd clients/php
          git config user.name "Richard Willis"
          git config user.email "willis.rh@gmail.com"
          git add .
          git commit -m "Generate code for version $tag"
          git push
          git tag "$tag"
          git push --tags
  build-and-publish-python:
    needs: [validate]
    name: Build and publish python
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          npm install
      - name: Checkout package source
        uses: actions/checkout@v2
        with:
          repository: badsyntax/mailinabox-api-py
          path: clients/python
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB }}
      - name: Clean package source
        run: |
          cd clients/python
          git rm -rf .
          git clean -fxd
      - name: Build python client
        run: |
          tag=${GITHUB_REF#refs/tags/}
          tag=0.0.3
          pip install black
          PACKAGE_VERSION="$tag" npm run generate:python
      - name: Push changes to package source
        run: |
          tag=${GITHUB_REF#refs/tags/}
          tag=0.0.3
          cd clients/python
          git config user.name "Richard Willis"
          git config user.email "willis.rh@gmail.com"
          git add .
          git commit -m "Generate code for version $tag"
          git push
          git tag "$tag"
          git push --tags
      - name: Publish python package
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine wheel
          cd clients/python
          python setup.py sdist bdist_wheel
          twine check dist/*
          twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD"
