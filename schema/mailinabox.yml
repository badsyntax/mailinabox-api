openapi: 3.0.3
info:
  title: Mail-in-a-Box
  description: 'This is the Mail-in-a-Box API HTTP specification.'
  contact:
    email: willis.rh@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '0.46.0'
externalDocs:
  description: Find out more about Mail-in-a-box
  url: https://mailinabox.email/
servers:
  - url: https://{host}/admin
    variables:
      host:
        default: box.example.com
        description: The API hostname
security:
  - basicAuth: []
tags:
  - name: user
    description: Endpoints related to users
  - name: system
    description: Endpoints related to system
paths:
  /me:
    get:
      tags:
        - user
      summary: Get user information
      operationId: getMe
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponse'
  /system/status:
    post:
      tags:
        - system
      summary: Retrieve system status
      operationId: getSystemStatus
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatusResponse'
  /system/privacy:
    get:
      tags:
        - system
      summary: Retrieve new-version check status
      operationId: getSystemPrivacyStatus
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPrivacyStatusResponse'
    post:
      tags:
        - system
      summary: Update new-version check status
      operationId: updateSystemPrivacy
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemPrivacyUpdateRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/SystemPrivacyUpdateResponse'

  /system/reboot:
    get:
      tags:
        - system
      summary: Retrieve reboot status
      operationId: getSystemRebootStatus
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemRebootStatusResponse'

  /system/backup/status:
    get:
      tags:
        - system
      summary: Retrieve backup status
      operationId: getSystemBackupStatus
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemBackupStatusResponse'
  /system/backup/config:
    get:
      tags:
        - system
      summary: Retrieve backup config
      operationId: getSystemBackupConfig
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemBackupConfigResponse'
    post:
      tags:
        - system
      summary: Update backup config
      operationId: updateSystemBackupConfig
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemBackupConfigUpdateRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/SystemBackupConfigUpdateResponse'
  /ssl/status:
    get:
      tags:
        - ssl
      summary: Retrieve SSL status
      operationId: getSSLStatus
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSLStatusResponse'
  /ssl/csr/{domain}:
    post:
      tags:
        - ssl
      summary: Generate CSR for domain
      operationId: generateSSLCSR
      parameters:
        - in: path
          name: domain
          schema:
            type: string
            format: hostname
          required: true
          description: Domain to generate CSR for
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SSLCSRGenerateRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                type: string
  /ssl/install:
    post:
      tags:
        - ssl
      summary: Install custom certificate
      operationId: installSSLCertificate
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SSLCertificateInstallRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/SSLCertificateInstallResponse'
  /dns/secondary-nameserver:
    get:
      tags:
        - dns
      summary: Retrieve secondary nameserver
      operationId: getDnsSecondaryNameserver
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSecondaryNameserverResponse'
    post:
      tags:
        - dns
      summary: Add a secondary nameserver
      operationId: addDnsSecondaryNameserver
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNSSecondaryNameserverAddRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/DNSSecondaryNameserverAddResponse'
  /dns/zones:
    get:
      tags:
        - dns
      summary: Retrieve DNS zones
      operationId: getDnsZones
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSZonesResponse'
  /dns/custom:
    get:
      tags:
        - dns
      summary: Retrieve custom DNS records
      operationId: getDnsCustomRecords
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSCustomResponse'
  /dns/custom/{domain}/{type}:
    parameters:
      - in: path
        name: domain
        schema:
          type: string
          format: hostname
        required: true
        description: DNS record domain
      - in: path
        name: type
        schema:
          $ref: '#/components/schemas/DNSRecordType'
        required: true
        description: Record type
    post:
      tags:
        - dns
      summary: Add a custom DNS record
      operationId: addDnsCustomRecord
      requestBody:
        $ref: '#/components/requestBodies/DNSCustomRecordRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/DNSCustomRecordAddResponse'
    delete:
      tags:
        - dns
      summary: Remove a custom DNS record
      operationId: removeDnsCustomRecord
      requestBody:
        $ref: '#/components/requestBodies/DNSCustomRecordRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/DNSCustomRecordRemoveResponse'
  /dns/dump:
    get:
      tags:
        - dns
      summary: Retrieve all DNS records
      operationId: getDnsDump
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDumpResponse'

  /mail/users:
    get:
      tags:
        - users
      summary: Retrieve all mail users
      operationId: getMailUsers
      parameters:
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/MailUsersResponseFormat'
          description: The format of the response
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailUsersResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/MailUsersSimpleResponse'
  /mail/users/add:
    post:
      tags:
        - users
      summary: Add a new mail user
      operationId: addMailUser
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailUserAddRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailUserAddResponse'
  /mail/users/remove:
    post:
      tags:
        - users
      summary: Remove a mail user
      operationId: removeMailUser
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailUserRemoveRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailUserRemoveResponse'
  /mail/users/privileges/add:
    post:
      tags:
        - users
      summary: Add a privilege to a mail user
      operationId: addMailUserPrivilege
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailUserAddAdminPrivilegeRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailUserAddAdminPrivilegeResponse'
  /mail/users/privileges/remove:
    post:
      tags:
        - users
      summary: Remove a privilege from a mail user
      operationId: removeMailUserPrivilege
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailUserRemoveAdminPrivilegeRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailUserRemoveAdminPrivilegeResponse'
  /mail/users/password:
    post:
      tags:
        - users
      summary: Set a password for a user
      operationId: setMailUserPassword
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailUserSetPasswordRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailUserSetPasswordResponse'
  /mail/aliases:
    get:
      tags:
        - aliases
      summary: Retrieve all aliases
      operationId: getMailAliases
      parameters:
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/MailAliasesResponseFormat'
          description: The format of the response
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailAliasesResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/MailAliasesSimpleResponse'
  /mail/aliases/add:
    post:
      tags:
        - aliases
      summary: Add or update mail alias
      operationId: upsertMailAlias
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailAliasUpsertRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailAliasUpsertResponse'
  /mail/aliases/remove:
    post:
      tags:
        - aliases
      summary: Remove a mail alias
      operationId: removeMailAlias
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailAliasRemoveRequest'
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/MailAliasRemoveResponse'
  /web/domains:
    get:
      tags:
        - web
      summary: Retrieve all static web domains
      operationId: getWebDomains
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebDomain'
  /web/update:
    post:
      tags:
        - web
      summary: Update static websites
      operationId: updateWeb
      responses:
        200:
          description: Successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/WebUpdateResponse'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  requestBodies:
    DNSCustomRecordRequest:
      description: The value of the DNS record
      required: true
      content:
        text/plain:
          schema:
            type: string
  schemas:
    MailUsersResponseFormat:
      type: string
      enum:
        - text
        - json
    MailAliasesResponseFormat:
      type: string
      enum:
        - text
        - json
    MailUserSetPasswordResponse:
      type: string
    MailUserRemoveResponse:
      type: string
    MailUserAddResponse:
      type: string
    MailUserAddAdminPrivilegeResponse:
      type: string
    MailUserRemoveAdminPrivilegeResponse:
      type: string
    MailUsersSimpleResponse:
      type: string
    MailUsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/MailUserByDomain'
    MailUserByDomain:
      type: object
      required:
        - domain
        - users
      properties:
        domain:
          type: string
          format: hostname
        users:
          type: array
          items:
            $ref: '#/components/schemas/MailUser'
    MailUser:
      type: object
      required:
        - email
        - privileges
        - status
      properties:
        email:
          type: string
          format: email
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/MailUserPrivilege'
        status:
          $ref: '#/components/schemas/MailUserStatus'
        mailbox:
          type: string
    MailAliasesSimpleResponse:
      type: string
    MailAliasesResponse:
      type: array
      items:
        $ref: '#/components/schemas/MailAliasByDomain'
    MailAliasByDomain:
      type: object
      required:
        - domain
        - aliases
      properties:
        domain:
          type: string
          format: hostname
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/MailAlias'
    MailAlias:
      type: object
      required:
        - address
        - address_display
        - forwards_to
        - permitted_senders
        - required
      properties:
        address:
          type: string
          format: email
        address_display:
          type: string
          format: email
        forwards_to:
          type: array
          items:
            $ref: '#/components/schemas/MailAddress'
        permitted_senders:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MailAddress'
        required:
          type: boolean
    MailAddress:
      type: string
      format: email
    MailAliasUpsertResponse:
      type: string
    MailAliasUpsertRequest:
      type: object
      required:
        - update_if_exists
        - address
        - forwards_to
        - permitted_senders
      properties:
        update_if_exists:
          type: integer
          format: int32
          minimum: 0
          maximum: 1
        address:
          type: string
        forwards_to:
          type: string
        permitted_senders:
          type: string
          nullable: true
    MailAliasRemoveResponse:
      type: string
    MailAliasRemoveRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
    DNSRecordType:
      enum:
        - A
        - AAAA
        - CAA
        - CNAME
        - TXT
        - MX
        - SRV
        - SSHFP
        - NS
    DNSDumpResponse:
      type: array
      items:
        $ref: '#/components/schemas/DNSDumpDomains'
    DNSDumpDomains:
      type: array
      items:
        oneOf:
          - type: string
          - $ref: '#/components/schemas/DNSDumpDomainRecords'
    DNSDumpDomainRecords:
      type: array
      items:
        $ref: '#/components/schemas/DNSDumpDomainRecord'
    DNSDumpDomainRecord:
      type: object
      required:
        - explanation
        - qname
        - type
        - value
      properties:
        explanation:
          type: string
        qname:
          type: string
          format: hostname
        type:
          type: string
        value:
          type: string
    DNSCustomRecord:
      type: object
      required:
        - qname
        - rtype
        - value
      properties:
        qname:
          type: string
          format: hostname
        rtype:
          $ref: '#/components/schemas/DNSRecordType'
        value:
          type: string
    DNSCustomResponse:
      type: array
      items:
        $ref: '#/components/schemas/DNSCustomRecord'
    DNSZonesResponse:
      type: array
      items:
        type: string
        format: hostname
    DNSSecondaryNameserverResponse:
      type: object
      required:
        - hostnames
      properties:
        hostnames:
          type: array
          items:
            type: string
    DNSCustomRecordRemoveResponse:
      type: string
    DNSCustomRecordAddResponse:
      type: string
    DNSSecondaryNameserverAddRequest:
      type: object
      required:
        - hostnames
      properties:
        hostnames:
          type: string
          description: Hostnames separated with commas or spaces
    DNSSecondaryNameserverAddResponse:
      type: string
    SystemPrivacyUpdateRequest:
      type: object
      required:
        - value
      properties:
        value:
          $ref: '#/components/schemas/SystemPrivacyStatus'
    SystemPrivacyStatus:
      type: string
      enum:
        - private
        - 'off'
    MailUserSetPasswordRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    MailUserAddRequest:
      type: object
      required:
        - email
        - password
        - privileges
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        privileges:
          $ref: '#/components/schemas/MailUserPrivilege'
    MailUserRemoveRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    MailUserStatus:
      type: string
      enum:
        - active
        - inactive
    MailUserPrivilege:
      type: string
      enum:
        - admin
        - ''
    MailUserAddAdminPrivilegeRequest:
      type: object
      required:
        - email
        - privilege
      properties:
        email:
          type: string
          format: email
        privilege:
          $ref: '#/components/schemas/MailUserPrivilege'
    MailUserRemoveAdminPrivilegeRequest:
      type: object
      required:
        - email
        - privilege
      properties:
        email:
          type: string
          format: email
        privilege:
          $ref: '#/components/schemas/MailUserPrivilege'
    SSLCSRGenerateRequest:
      type: object
      required:
        - countrycode
      properties:
        countrycode:
          type: string
    SSLCertificateInstallRequest:
      type: object
      required:
        - domain
        - cert
        - chain
      properties:
        domain:
          type: string
          format: hostname
        cert:
          type: string
        chain:
          type: string
    SSLCertificateInstallResponse:
      type: string
    SystemPrivacyStatusResponse:
      type: boolean
      description: |
        Response:
        * `true`: Private, new-version checks will not be performed
        * `false`: Not private, new-version checks will be performed
    SystemPrivacyUpdateResponse:
      type: string
    SystemRebootStatusResponse:
      type: boolean
      description: |
        Response:
        * `true`: A reboot is required
        * `false`: A reboot is not required
    SystemStatusResponse:
      type: array
      items:
        $ref: '#/components/schemas/StatusEntry'
    StatusEntry:
      type: object
      required:
        - type
        - text
        - extra
      properties:
        type:
          $ref: '#/components/schemas/StatusEntryType'
        text:
          type: string
        extra:
          type: array
          items:
            $ref: '#/components/schemas/StatusEntryExtra'
    StatusEntryType:
      type: string
      enum:
        - heading
        - ok
        - warning
        - error
    StatusEntryExtra:
      type: object
      required:
        - monospace
        - text
      properties:
        monospace:
          type: string
        text:
          type: string
    SystemBackupConfigUpdateRequest:
      type: object
      required:
        - target
        - target_user
        - target_pass
        - min_age
      properties:
        target:
          type: string
          format: hostname
        target_user:
          type: string
        target_pass:
          type: string
        min_age:
          type: integer
          format: int32
          minimum: 1
    SystemBackupConfigUpdateResponse:
      type: string
    SystemBackupConfigResponse:
      type: object
      required:
        - enc_pw_file
        - file_target_directory
        - min_age_in_days
        - ssh_pub_key
        - target
      properties:
        enc_pw_file:
          type: string
        file_target_directory:
          type: string
        min_age_in_days:
          type: integer
          format: int32
          minimum: 1
        ssh_pub_key:
          type: string
        target:
          type: string
          format: hostname
        target_user:
          type: string
        target_pass:
          type: string
    SystemBackupStatusResponse:
      type: object
      required:
        - unmatched_file_size
      properties:
        backups:
          type: array
          items:
            $ref: '#/components/schemas/SystemBackupStatus'
        unmatched_file_size:
          type: integer
          format: int32
    SystemBackupStatus:
      type: object
      required:
        - date
        - date_delta
        - date_str
        - full
        - size
        - volumes
      properties:
        date:
          type: string
          format: date-time
        date_delta:
          type: string
        date_str:
          type: string
        deleted_in:
          type: string
        full:
          type: boolean
        size:
          type: integer
          format: int32
        volumes:
          type: integer
          format: int32
    SSLStatusResponse:
      type: object
      required:
        - can_provision
        - status
      properties:
        can_provision:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            $ref: '#/components/schemas/SSLStatus'
    SSLStatus:
      type: object
      required:
        - domain
        - status
        - text
      properties:
        domain:
          type: string
          format: hostname
        status:
          $ref: '#/components/schemas/SSLStatusType'
        text:
          type: string
    SSLStatusType:
      type: string
      enum:
        - success
        - danger
        - not-applicable
    MeResponse:
      type: object
      required:
        - status
      properties:
        api_key:
          type: string
        email:
          type: string
          format: email
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/MailUserPrivilege'
        reason:
          type: string
        status:
          $ref: '#/components/schemas/MeAuthStatus'
    MeAuthStatus:
      type: string
      enum:
        - ok
        - invalid
    WebDomain:
      type: object
      required:
        - custom_root
        - domain
        - root
        - ssl_certificate
        - static_enabled
      properties:
        custom_root:
          type: string
        domain:
          type: string
          format: hostname
        root:
          type: string
        ssl_certificate:
          type: array
          minItems: 2
          maxItems: 2
          uniqueItems: true
          items:
            oneOf:
              - type: string
              - type: string
                enum:
                  - danger
                  - success
        static_enabled:
          type: boolean
    WebUpdateResponse:
      type: string
